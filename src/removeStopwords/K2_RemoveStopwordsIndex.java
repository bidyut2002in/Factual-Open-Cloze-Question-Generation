/**
 * Step2: Remove Only Stopwords. Include: TextReader.Java 
 */

package removeStopwords;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;

public class K2_RemoveStopwordsIndex {
	/**
	 * RemoveSpecialChars->RemoveStopwords->RemoveSinleWordLine->Bigram->Ngram
	 */
	static TextReader FileIn;
	static PrintWriter FileOut;
	
	public static void main(String[] args) throws IOException {
	List<String>stops=new LinkedList<String>();
    //Stopwords list from Rainbow
	stops.add("a");
	stops.add("able");
	stops.add("about");
	stops.add("above");
	stops.add("according");
	stops.add("accordingly");
	stops.add("across");
	stops.add("actually");
	stops.add("after");
	stops.add("afterwards");
	stops.add("again");
	stops.add("against");
	stops.add("all");
	stops.add("allow");
	stops.add("allows");
	stops.add("almost");
	stops.add("alone");
	stops.add("along");
	stops.add("already");
	stops.add("also");
	stops.add("although");
	stops.add("always");
	stops.add("am");
	stops.add("among");
	stops.add("amongst");
	stops.add("an");
	stops.add("and");
	stops.add("another");
	stops.add("any");
	stops.add("anybody");
	stops.add("anyhow");
	stops.add("anyone");
	stops.add("anything");
	stops.add("anyway");
	stops.add("anyways");
	stops.add("anywhere");
	stops.add("apart");
	stops.add("appear");
	stops.add("appreciate");
	stops.add("appropriate");
	stops.add("are");
	stops.add("around");
	stops.add("as");
	stops.add("aside");
	stops.add("ask");
	stops.add("asking");
	stops.add("associated");
	stops.add("at");
	stops.add("available");
	stops.add("away");
	stops.add("awfully");
	stops.add("b");
	stops.add("be");
	stops.add("became");
	stops.add("because");
	stops.add("become");
	stops.add("becomes");
	stops.add("becoming");
	stops.add("been");
	stops.add("before");
	stops.add("beforehand");
	stops.add("behind");
	stops.add("being");
	stops.add("believe");
	stops.add("below");
	stops.add("beside");
	stops.add("besides");
	stops.add("best");
	stops.add("better");
	stops.add("between");
	stops.add("beyond");
	stops.add("both");
	stops.add("brief");
	stops.add("but");
	stops.add("by");
	stops.add("c");
	stops.add("came");
	stops.add("can");
	stops.add("cannot");
	stops.add("cant");
	stops.add("cause");
	stops.add("causes");
	stops.add("certain");
	stops.add("certainly");
	stops.add("changes");
	stops.add("clearly");
	stops.add("co");
	stops.add("com");
	stops.add("come");
	stops.add("comes");
	stops.add("concerning");
	stops.add("consequently");
	stops.add("consider");
	stops.add("considering");
	stops.add("contain");
	stops.add("containing");
	stops.add("contains");
	stops.add("corresponding");
	stops.add("could");
	stops.add("course");
	stops.add("currently");
	stops.add("d");
	stops.add("definitely");
	stops.add("described");
	stops.add("despite");
	stops.add("did");
	stops.add("different");
	stops.add("do");
	stops.add("does");
	stops.add("doing");
	stops.add("done");
	stops.add("down");
	stops.add("downwards");
	stops.add("during");
	stops.add("e");
	stops.add("each");
	stops.add("edu");
	stops.add("eg");
	stops.add("eight");
	stops.add("either");
	stops.add("else");
	stops.add("elsewhere");
	stops.add("enough");
	stops.add("entirely");
	stops.add("especially");
	stops.add("et");
	stops.add("etc");
	stops.add("even");
	stops.add("ever");
	stops.add("every");
	stops.add("everybody");
	stops.add("everyone");
	stops.add("everything");
	stops.add("everywhere");
	stops.add("ex");
	stops.add("exactly");
	stops.add("example");
	stops.add("except");
	stops.add("f");
	stops.add("far");
	stops.add("few");
	stops.add("fifth");
	stops.add("first");
	stops.add("five");
	stops.add("followed");
	stops.add("following");
	stops.add("follows");
	stops.add("for");
	stops.add("former");
	stops.add("formerly");
	stops.add("forth");
	stops.add("four");
	stops.add("from");
	stops.add("further");
	stops.add("furthermore");
	stops.add("g");
	stops.add("get");
	stops.add("gets");
	stops.add("getting");
	stops.add("given");
	stops.add("gives");
	stops.add("go");
	stops.add("goes");
	stops.add("going");
	stops.add("gone");
	stops.add("got");
	stops.add("gotten");
	stops.add("greetings");
	stops.add("h");
	stops.add("had");
	stops.add("happens");
	stops.add("hardly");
	stops.add("has");
	stops.add("have");
	stops.add("having");
	stops.add("he");
	stops.add("hello");
	stops.add("help");
	stops.add("hence");
	stops.add("her");
	stops.add("here");
	stops.add("hereafter");
	stops.add("hereby");
	stops.add("herein");
	stops.add("hereupon");
	stops.add("hers");
	stops.add("herself");
	stops.add("hi");
	stops.add("him");
	stops.add("himself");
	stops.add("his");
	stops.add("hither");
	stops.add("hopefully");
	stops.add("how");
	stops.add("howbeit");
	stops.add("however");
	stops.add("i");
	stops.add("ie");
	stops.add("if");
	stops.add("ignored");
	stops.add("immediate");
	stops.add("in");
	stops.add("inasmuch");
	stops.add("inc");
	stops.add("indeed");
	stops.add("indicate");
	stops.add("indicated");
	stops.add("indicates");
	stops.add("inner");
	stops.add("insofar");
	stops.add("instead");
	stops.add("into");
	stops.add("inward");
	stops.add("is");
	stops.add("it");
	stops.add("its");
	stops.add("itself");
	stops.add("j");
	stops.add("just");
	stops.add("k");
	stops.add("keep");
	stops.add("keeps");
	stops.add("kept");
	stops.add("know");
	stops.add("knows");
	stops.add("known");
	stops.add("l");
	stops.add("last");
	stops.add("lately");
	stops.add("later");
	stops.add("latter");
	stops.add("latterly");
	stops.add("least");
	stops.add("less");
	stops.add("lest");
	stops.add("let");
	stops.add("like");
	stops.add("liked");
	stops.add("likely");
	stops.add("little");
	stops.add("ll"); 
	stops.add("look");
	stops.add("looking");
	stops.add("looks");
	//stops.add("ltd");
	stops.add("m");
	stops.add("mainly");
	stops.add("many");
	stops.add("may");
	stops.add("maybe");
	stops.add("me");
	stops.add("mean");
	stops.add("meanwhile");
	stops.add("merely");
	stops.add("might");
	stops.add("more");
	stops.add("moreover");
	stops.add("most");
	stops.add("mostly");
	stops.add("much");
	stops.add("must");
	stops.add("my");
	stops.add("myself");
	stops.add("n");
	stops.add("name");
	stops.add("namely");
	stops.add("nd");
	stops.add("near");
	stops.add("nearly");
	stops.add("necessary");
	stops.add("need");
	stops.add("needs");
	stops.add("neither");
	stops.add("never");
	stops.add("nevertheless");
	stops.add("new");
	stops.add("next");
	stops.add("nine");
	stops.add("no");
	stops.add("nobody");
	stops.add("non");
	stops.add("none");
	stops.add("noone");
	stops.add("nor");
	stops.add("normally");
	stops.add("not");
	stops.add("nothing");
	stops.add("novel");
	stops.add("now");
	stops.add("nowhere");
	stops.add("o");
	stops.add("obviously");
	stops.add("of");
	stops.add("off");
	stops.add("often");
	stops.add("oh");
	stops.add("ok");
	stops.add("okay");
	stops.add("old");
	stops.add("on");
	stops.add("once");
	stops.add("one");
	stops.add("ones");
	stops.add("only");
	stops.add("onto");
	stops.add("or");
	stops.add("other");
	stops.add("others");
	stops.add("otherwise");
	stops.add("ought");
	stops.add("our");
	stops.add("ours");
	stops.add("ourselves");
	stops.add("out");
	stops.add("outside");
	stops.add("over");
	stops.add("overall");
	stops.add("own");
	stops.add("p");
	stops.add("particular");
	stops.add("particularly");
	stops.add("per");
	stops.add("perhaps");
	stops.add("placed");
	stops.add("please");
	stops.add("plus");
    stops.add("possible");
    stops.add("presumably");
    stops.add("probably");
    stops.add("provides");
    stops.add("q");
    stops.add("que");
    stops.add("quite");
    stops.add("qv");
    stops.add("r");
    stops.add("rather");
    stops.add("rd");
    stops.add("re");
    stops.add("really");
    stops.add("reasonably");
    stops.add("regarding");
    stops.add("regardless");
    stops.add("regards");
    stops.add("relatively");
    stops.add("respectively");
    stops.add("right");
    stops.add("s");
    stops.add("said");
    stops.add("same");
    stops.add("saw");
    stops.add("say");
    stops.add("saying");
    stops.add("says");
    stops.add("second");
    stops.add("secondly");
    stops.add("see");
    stops.add("seeing");
    stops.add("seem");
    stops.add("seemed");
    stops.add("seeming");
    stops.add("seems");
    stops.add("seen");
    stops.add("self");
    stops.add("selves");
    stops.add("sensible");
    stops.add("sent");
    stops.add("serious");
    stops.add("seriously");
    stops.add("seven");
    stops.add("several");
    stops.add("shall");
    stops.add("she");
    stops.add("should");
    stops.add("since");
    stops.add("six");
    stops.add("so");
    stops.add("some");
    stops.add("somebody");
    stops.add("somehow");
    stops.add("someone");
    stops.add("something");
    stops.add("sometime");
    stops.add("sometimes");
    stops.add("somewhat");
    stops.add("somewhere");
    stops.add("soon");
    stops.add("sorry");
    stops.add("specified");
    stops.add("specify");
    stops.add("specifying");
    stops.add("still");
    stops.add("sub");
    stops.add("such");
    stops.add("sup");
    stops.add("sure");
    stops.add("t");
    stops.add("take");
    stops.add("taken");
    stops.add("tell");
    stops.add("tends");
    stops.add("th");
    stops.add("than");
    stops.add("thank");
    stops.add("thanks");
    stops.add("thanx");
    stops.add("that");
    stops.add("thats");
    stops.add("the");
    stops.add("their");
    stops.add("theirs");
    stops.add("them");
    stops.add("themselves");
    stops.add("then");
    stops.add("thence");
    stops.add("there");
    stops.add("thereafter");
    stops.add("thereby");
    stops.add("therefore");
    stops.add("therein");
    stops.add("theres");
    stops.add("thereupon");
    stops.add("these");
    stops.add("they");
    stops.add("think");
    stops.add("third");
    stops.add("this");
    stops.add("thorough");
    stops.add("thoroughly");
    stops.add("those");
    stops.add("though");
    stops.add("three");
    stops.add("through");
    stops.add("throughout");
    stops.add("thru");
    stops.add("thus");
    stops.add("to");
    stops.add("together");
    stops.add("too");
    stops.add("took");
    stops.add("toward");
    stops.add("towards");
    stops.add("tried");
    stops.add("tries");
    stops.add("truly");
    stops.add("try");
    stops.add("trying");
    stops.add("twice");
    stops.add("two");
    stops.add("u");
    stops.add("un");
    stops.add("under");
    stops.add("unfortunately");
    stops.add("unless");
    stops.add("unlikely");
    stops.add("until");
    stops.add("unto");
    stops.add("up");
    stops.add("upon");
    stops.add("us");
    stops.add("use");
    stops.add("used");
    stops.add("useful");
    stops.add("uses");
    stops.add("using");
    stops.add("usually");
    stops.add("uucp");
    stops.add("v");
    stops.add("value");
    stops.add("various");
    stops.add("ve"); 
    stops.add("very");
    stops.add("via");
    stops.add("viz");
    stops.add("vs");
    stops.add("w");
    stops.add("want");
    stops.add("wants");
    stops.add("was");
    stops.add("way");
    stops.add("we");
    stops.add("welcome");
    stops.add("well");
    stops.add("went");
    stops.add("were");
    stops.add("what");
    stops.add("whatever");
    stops.add("when");
    stops.add("whence");
    stops.add("whenever");
    stops.add("where");
    stops.add("whereafter");
    stops.add("whereas");
    stops.add("whereby");
    stops.add("wherein");
    stops.add("whereupon");
    stops.add("wherever");
    stops.add("whether");
    stops.add("which");
    stops.add("while");
    stops.add("whither");
    stops.add("who");
    stops.add("whoever");
    stops.add("whole");
    stops.add("whom");
    stops.add("whose");
    stops.add("why");
    stops.add("will");
    stops.add("willing");
    stops.add("wish");
    stops.add("with");
    stops.add("within");
    stops.add("without");
    stops.add("wonder");
    stops.add("would");
    stops.add("would");
    stops.add("x");
    stops.add("y");
    stops.add("yes");
    stops.add("yet");
    stops.add("you");
    stops.add("your");
    stops.add("yours");
    stops.add("yourself");
    stops.add("yourselves");
    stops.add("z");
    stops.add("zero");
    //System.out.print("stopwords: " + stops);
   	FileIn = new TextReader(new FileReader("D:/b.txt"));
	FileOut=new PrintWriter(new FileWriter("D:/c.txt"));
	String str;
	while(!FileIn.eof())
		{
		str=FileIn.getWord().toLowerCase(); //
		if(!stops.contains(str))
		{
			if(!FileIn.eoln())
				FileOut.print(str+" ");
			else
				FileOut.println(str+" ");
		}
		else{
			FileOut.println();
		}//end if
		}//end while
	FileIn.close();
	FileOut.close();
}
}
  